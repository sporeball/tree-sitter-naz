==========
arithmetic
==========

9a

---

(source_file
  (fragment
    (arithmetic
      (add))))

====
halt
====

1h

---

(source_file
  (fragment
    (halt)))

======
negate
======

1n

---

(source_file
  (fragment
    (negate)))

======
output
======

1o

---

(source_file
  (fragment
    (output)))

====
read
====

1r

---

(source_file
  (fragment
    (read)))

=============
function call
=============

1f

---

(source_file
  (fragment
    (function)))

==============
function write
==============

1x1f

---

(source_file
  (fragment
    (function_write
      (opcode_1)
      (function))))

=============
variable load
=============

1v

---

(source_file
  (fragment
    (variable)))

==============
variable write
==============

2x1v

---

(source_file
  (fragment
    (variable_write
      (opcode_2)
      (variable))))

================
conditional goto
================

3x1v2e

---

(source_file
  (fragment
    (conditional
      (opcode_3)
      (variable)
      (condition))))

==========
opcode set
==========

1x

---

(source_file
  (fragment
    (opcode
      (opcode_1))))

=======
comment
=======

# comment

---

(source_file
  (comment))

=================
line with comment
=================

1x1f1a # function 1: add 1

---

(source_file
  (fragment
    (function_write
      (opcode_1)
      (function)))
  (fragment
    (arithmetic
      (add)))
  (comment))
